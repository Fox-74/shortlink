
_________________________________________
||  Технические требования к Frontend  ||
-----------------------------------------
1. Регистрация:
Маршрут: "/register"

Для регистрации нового пользователя отправить методом POST JSON:

{
    "user_name": "test14",
    "password": "password14"
}

В Frontend реализовать форму регистрации передача авторизационных данных по https.

2. Авторизация:
Маршрут: "/login"

Авторизация:

Basic auth

В ответ приходит JSON:
{
    "token" : "Хэш_авторизации_со_сроком_жизни 60 мин."
}

Авторизация JWT.
В Frontend реализовать получение и хранение token пользователя.

3. Создание ссылок
Маршрут: "/makelink"

Для создания ссылок необходимо в headers поместить параметр "x-access-tokens": "Хэш_авторизации" и отправить методом POST JSON:

{
    "user_name": "Имя_поьлзователя",
    "link": "Длинная ссылка",
    "linktype": "Уровень доступа к ссылке (public, shared, private)",
    "shortlink": "псевдоним_придуманный_пользователем_для_длинной ссылки" # Если необходимо генерировать короткую ссылку то необходимо передать значение null
}

В ответ отправляется короткая ссылка или сообщение об ошибке

В Frontend реализовать форму создания ссылок с полями "Длинная ссылка", "Уровень доступа к ссылке" (реализовать выпадающим списком public, shared, private)
и "Короткая ссылка" (если поле пустое то null)

4. Переход по ссылке
Маршрут: "/" или "/shortlink"

Для ссылок с уровнем доступа public необходимо ввести только короткую ссылку в адресную строку.

В ответ сервер произведет перенаправление пользователя по длинной ссылке и изменит счетчик ссылки на +1.
Frontend не используется

Для ссылок с уровнем доступа share и privat в ответ будет отправлено сообщение о необходимости авторизации и перенаправление на маршрут "/shortlink".
По маршруту "/shortlink" в headers поместить параметр "x-access-tokens": "Хэш_авторизации" и отправить методом POST JSON:

{
    "shortlink": "короткая ссылка без адреса сервиса"
}

После проверки прав на ссылку сервер перенаправляет пользователя по длинной ссылке или выдает сообщение об ошибке.
В Fronend реализовать механизм авторизации и форму для ввода короткой ссылки.


5. Редактирование ссылок
Маршрут: "/edit"

Возможности:
    1. Замена "Хэш" псевдонима на произвольный или на другой псевдоним;
    2. Удаление псевдонима и замена его "Хэш" псевдонимом;
    3. Изменение уровня доступа к ссылке;
    4. Удаление ссылки.


Для п.1 необходимо отправить JSON:

{
    "longlink": "Длинная_ссылка",
    "shortlink": "Короткая_ссылка",
    "linktype": null,
    "delitlink": null
}

Для п.2 необходимо отправить JSON:

{
    "longlink": "Длинная_ссылка",
    "shortlink": "delete",
    "linktype": null,
    "delitlink": null
}

Для п.3 необходимо отправить JSON:

{
    "longlink": "Длинная_ссылка",
    "shortlink": null,
    "linktype": "Уровень доступа (public, shared, private),
    "delitlink": null
}

Для п.4 необходимо отправить JSON:

{
    "longlink": "Длинная_ссылка",
    "shortlink": null,
    "linktype": null,
    "delitlink": "delete"
}

В Frontend по адресу /edit генерировать форму с выпадающим списком ссылок пользователя в ответ на JSON с token авторизации.
Реализовать формирование JSON по п.1 - 4 в форме. Другие сценарии исключить.
